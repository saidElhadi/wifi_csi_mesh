[1/12] Linking C static library esp-idf\esp_local_ctrl\libesp_local_ctrl.a
[2/12] Linking C static library esp-idf\wifi_provisioning\libwifi_provisioning.a
[3/12] Performing build step for 'bootloader'
[1/1] cmd.exe /C "cd /D C:\Users\Sayid\workspace\Research\csi_node\build\bootloader\esp-idf\esptool_py && C:\Espressif\python_env\idf5.2_py3.11_env\Scripts\python.exe C:/Espressif/frameworks/esp-idf-v5.2.2/components/partition_table/check_sizes.py --offset 0x8000 bootloader 0x0 C:/Users/Sayid/workspace/Research/csi_node/build/bootloader/bootloader.bin"
Bootloader binary size 0x5170 bytes. 0x2e90 bytes (36%) free.
[4/10] Building C object esp-idf/main/CMakeFiles/__idf_main.dir/app_main.c.obj
[5/10] Linking C static library esp-idf\main\libmain.a
[6/10] Generating ld/sections.ld
[7/10] Building C object CMakeFiles/csi_node.elf.dir/project_elf_src_esp32c3.c.obj
[8/10] Linking CXX executable csi_node.elf
[9/10] Generating binary image from built executable
esptool.py v4.7.0
Creating esp32c3 image...
Merged 1 ELF section
Successfully created esp32c3 image.
Generated C:/Users/Sayid/workspace/Research/csi_node/build/csi_node.bin
[10/10] cmd.exe /C "cd /D C:\Users\Sayid\workspace\Research\csi_node\build\esp-idf\esptool_py && C:\Espressif\python_env\idf5.2_py3.11_env\Scripts\python.exe C:/Espressif/frameworks/esp-idf-v5.2.2/components/partition_table/check_sizes.py --offset 0x8000 partition --type app C:/Users/Sayid/workspace/Research/csi_node/build/partition_table/partition-table.bin C:/Users/Sayid/workspace/Research/csi_node/build/csi_node.bin"
csi_node.bin binary size 0xc14b0 bytes. Smallest app partition is 0x100000 bytes. 0x3eb50 bytes (24%) free.
